#!/bin/bash -e

usage() {
  cat << EOF
  usage: ./scripts/install [options] ...

  Options:
    -c, --clean         run cabal --clean before building
    -f, --fast          skip haddock documentation step

  Environment variables:

    If CABAL is defined, it is used as the cabal command.

EOF
  exit 1
}

# there were three separate places we install testing dependencies. the
# packages installed were slightly different -- can we agree on one?
install_test_deps() {
  #$CABAL install HUnit QuickCheck 'hspec >= 0.8 && < 0.10'
  #$CABAL install HUnit QuickCheck 'file-location' 'hspec >= 0.8 && < 0.10'
  #$CABAL install HUnit QuickCheck 'hspec >= 0.8 && < 1.0' # shelltestrunner

  # I vote this one :)
  $CABAL install HUnit QuickCheck 'file-location' 'hspec >= 0.8 && < 0.10'
}

clean_pkgs() {
  $clean || return

  local pkg

  for pkg; do
    (
      echo ":: Cleaning $pkg..."
      cd $pkg
      $CABAL clean
    )
  done
}

test_pkgs() {
  $testpkg || return

  local pkg

  for pkg; do
    (
      echo ":: Testing $pkg..."
      cd $pkg

      # what does this do to fix our dep hell? the refactor made things
      # more readable (IMO) but it's what the script was doing before --
      # and i don't get it :)
      if which cabal-src-install &>/dev/null; then
        CABAL=$CABAL cabal-src-install --src-only
      fi

      $CABAL configure -ftest --enable-tests
      $CABAL build
      $CABAL test
    )
  done
}

install_packages() {
  local cabal_opt=''

  $fast && cabal_opt+="--disable-documentation"

  echo ":: Installing $@"
  $CABAL install --only-dependencies "$@"

  if ! $CABAL install $cabal_opt --ghc-options='-Wall -Werror' "$@"; then
    cat >&2 <<-EOF
    Installation failed! Please report this to the mail list at
    http://groups.google.com/group/yesodweb or on the issue tracker at
    http://github.com/yesodweb/issues".
    EOF
    exit 1
  fi
}

testpkg=true
clean=false
fast=false

while [[ -n "$1" ]]; do
  case "$1" in
    -c|--clean) clean=true    ;;
    -f|--fast)  fast=true     ;;
    -h|--help)  usage         ;;
    *)          break         ;;
  esac
  shift
done

CABAL="${CABAL:-cabal}"

if [[ $# -ne 0 ]]; then
  pkgs=( "$@" )
else
  source package-list.sh 2>/dev/null
  [[ "${#pkgs[@]}" -eq 0 ]] && { echo 'No packages were found to install' >&2; exit 1; }
fi


install_test_deps
clean_pkgs "${pkgs[@]}"
install_packages "${pkgs[@]}"

# persistent packages do not get tested
[[ "$repo" != 'persistent' ]] && test_pkgs "${pkgs[@]}"
