#!/bin/bash -e

errorout() { echo "$*" >&2; exit 1; }

usage() { echo 'scripts/install [ --clean ] [ --fast ]'; exit 1; }

install_pkgs() {
  local pkg

  for pkg; do
    echo "Installing $pkg..."

    (
      cd "./$pkg"

      $clean && $CABAL clean

      if ! $CABAL configure --ghc-options='-Wall -Werror'; then
        $CABAL install --only-dependencies
        $CABAL configure --ghc-options='-Wall -Werror'
      fi

      $CABAL build
      $CABAL configure --enable-tests 
      $CABAL build
      $CABAL test
      $CABAL check

      $fast || $CABAL haddock --executables

      ./Setup.lhs install
    )
  done
}

hamlet_pkgs=( shakespeare
              shakespeare-css
              shakespeare-js
              shakespeare-text
              hamlet
            )

# todo: persistent

wai_pkgs=( wai
           wai-test
           wai-extra
           warp
           wai-app-static
           wai-handler-fastcgi
           wai-handler-launch
           wai-handler-scgi
           warp-static
         )

yesod_pkgs=( yesod-core
             yesod-json
             yesod-static
             yesod-persistent
             yesod-newsfeed
             yesod-form
             yesod-auth
             yesod-sitemap
             yesod
           )

# allow an env var to override
CABAL=${CABAL:-cabal}

# determine what repo you're in dynamically
read -r repo < <(git remote -v | sed '/^origin .*\/\(.*\)\.git (fetch)/!d; s//\1/g')
[[ -z "$repo" ]] && errorout 'unable to determine repository name.'

# set the pkgs array to those appropriate for that repo
varname="${repo}_pkgs[@]"
declare -a pkgs=( ${!varname} )
[[ "${#pkgs[@]}" -eq 0 ]] && errorout "no packages to install for repository $repo."

clean=false
fast=false

while [[ -n "$1" ]]; do
  case "$1" in
    -c|--clean) clean=true ;;
    -f|--fast)  fast=true  ;;
    *)          usage      ;;
  esac
  shift
done

# install testing dependencies
$CABAL install HUnit QuickCheck 'hspec >= 0.6.1 && < 0.7' shelltestrunner

install_pkgs "${pkgs[@]}"
